import{_ as b,c as i,e,x as d,y as u,z as f,A as m,i as c,l as _,q as w,B as h,F as y,v as g,b as o}from"./index-B1Hx-LR5.js";const k={props:{user:{type:Object},onLine:{type:Boolean}},components:{},data(){return{username:"",password:"",incorrectCredentials:!1,errorMessage:"",editingName:!1,editedName:this.user.name}},methods:{async login(){try{await this.user.apiLogin(this.username,this.password),this.incorrectCredentials=!1,this.$toast.success("Login successful"),this.$router.push("/")}catch(t){console.log(t.status),t.status===401?(this.incorrectCredentials=!0,this.errorMessage="Incorrect username or password"):t.status===404?(this.incorrectCredentials=!0,this.errorMessage="User not found"):console.log("Other error:",t)}},editName(){this.editingName=!0},async saveName(){if(this.editedName!=this.user.name)try{await this.user.apiEditUser(this.editedName),this.$toast.success("Profile updated")}catch(t){console.log(t.status),t.status===401?this.$toast.error("Error updating profile"):console.log("Other error:",t)}this.editingName=!1}}},v={key:0,class:"mt-12 pt-6"},N={class:"max-w-xs mx-auto rounded-lg border border-gray-700 bg-[#161b22] flex flex-col text-white px-4 py-3"},C=e("label",{class:"block uppercase text-white text-sm mb-2",for:"username"},"Username",-1),L=e("label",{class:"block uppercase text-white text-sm mb-2",for:"password"},"Password",-1),U={key:0,class:"text-red-500 text-sm mb-3"},B={class:"mt-5 max-w-xs mx-auto rounded-lg border border-gray-700 bg-[#161b22] flex flex-col text-white px-4 py-3"},V=e("label",{class:"block uppercase text-white text-sm mb-2",for:"username"},"Not registered?",-1),M=e("button",{class:"bg-orange-500 hover:bg-orange-600 text-white font-bold py-1 px-4 rounded w-full"},"Create an account",-1),I={key:1,class:"mt-12 pt-6 pb-4"},P={class:"max-w-xs mx-auto rounded-lg border border-gray-700 bg-[#161b22] flex flex-col text-white px-4 py-3"},E={class:"flex justify-between mb-2"},O={class:"flex"},j=e("label",{class:"block uppercase text-white text-sm",for:"username"},"Username:",-1),z={class:"px-4 text-sm"},D={class:"flex mb-2"},F=e("label",{class:"block uppercase text-white text-sm",for:"password"},"Name:",-1),R={key:0,class:"px-4 text-sm"},S={key:1,class:"px-4"},q={key:2},A=e("div",{class:"max-w-xs mx-auto rounded-lg border border-gray-700 bg-[#161b22] flex flex-col text-white px-4 py-3"}," Previous updates ",-1),T=[A];function G(t,r,n,H,s,l){const x=g("RouterLink"),p=g("v-icon");return o(),i(y,null,[!n.user.loggedIn&&n.onLine?(o(),i("section",v,[e("div",N,[C,d(e("input",{class:"shadow bg-black appearance-none border border-gray-700 rounded w-full py-1 px-3 leading-tight focus:outline-none focus:shadow-outline mb-3",id:"username",type:"text","onUpdate:modelValue":r[0]||(r[0]=a=>s.username=a)},null,512),[[u,s.username]]),L,d(e("input",{class:f(["shadow bg-black appearance-none border border-gray-700 rounded w-full py-1 px-3 leading-tight focus:outline-none focus:shadow-outline",{"mb-3":!s.incorrectCredentials}]),id:"password",type:"password","onUpdate:modelValue":r[1]||(r[1]=a=>s.password=a)},null,2),[[u,s.password]]),s.incorrectCredentials?(o(),i("span",U,"["+m(s.errorMessage)+"]",1)):c("",!0),e("button",{class:"bg-orange-500 hover:bg-orange-600 text-white font-bold py-1 px-4 rounded",onClick:r[2]||(r[2]=(...a)=>l.login&&l.login(...a))},"Sign in")]),e("div",B,[V,_(x,{to:"/register"},{default:w(()=>[M]),_:1})])])):c("",!0),n.user.loggedIn&&n.onLine?(o(),i("section",I,[e("div",P,[e("div",E,[e("div",O,[j,e("p",z,m(n.user.username),1)]),s.editingName?(o(),h(p,{key:1,name:"fa-save",class:"hover:cursor-pointer",onClick:l.saveName},null,8,["onClick"])):(o(),h(p,{key:0,name:"fa-edit",class:"hover:cursor-pointer",onClick:l.editName},null,8,["onClick"]))]),e("div",D,[F,s.editingName?(o(),i("div",S,[d(e("input",{class:"bg-black appearance-none border border-gray-700 rounded w-full py-1 px-3 leading-tight focus:outline-none focus:shadow-outline","onUpdate:modelValue":r[3]||(r[3]=a=>s.editedName=a)},null,512),[[u,s.editedName]])])):(o(),i("p",R,m(n.user.name),1))])])])):c("",!0),n.user.loggedIn&&n.onLine?(o(),i("section",q,T)):c("",!0)],64)}const K=b(k,[["render",G]]);export{K as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
